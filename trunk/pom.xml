<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>org.company.utility</groupId>
	<artifactId>tostring-implementation</artifactId>
	<version>1.3</version>

	<properties>
		<version.maven.compiler.plugin>3.1</version.maven.compiler.plugin>

		<version.java>1.7</version.java>
		<version.junit>4.10</version.junit>

		<version.slf4j>1.6.4</version.slf4j>
		<version.logback>1.0.3</version.logback>

		<version.jqti>2.0a4</version.jqti>

	</properties>

	<!-- Project details -->
	<name>tostring-implementation</name>
	<packaging>jar</packaging>
	<description>This project is a library for any POJO class to implement a toString method. Given a class name and instance, the project will use reflection from Java API to get the getter methods for the given instance and execute it to print the methodName = methodValue in an appended string with comma separated values. This is very generic implementation so anybody can use this code to write their toString implementation. The idea is to avoid implementing toString by writing your own implementation every time.

Please put your thoughts on the implementation so we can evolve as a project which will help every Java Developer.</description>
	<organization>
		<name>Yet to identify</name>
	</organization>

	<dependencies>
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>${version.junit}</version>
			<scope>test</scope>
		</dependency>

		<!-- Logging Framework - slf4j over logback -->
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-api</artifactId>
			<version>${version.slf4j}</version>
		</dependency>
		<dependency>
			<groupId>ch.qos.logback</groupId>
			<artifactId>logback-classic</artifactId>
			<version>${version.logback}</version>
		</dependency>

		<!-- Following can be used to test stackOverFlow mentioned in issue#3 -->

		<!-- JQTI Reference available in Apollo Util -->
		<!-- <dependency> <groupId>com.merittrac.apollo.util</groupId> <artifactId>jqti</artifactId> <version>${version.jqti}</version> 
			</dependency> -->

	</dependencies>

	<build>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>${version.maven.compiler.plugin}</version>
				<configuration>
					<source>${version.java}</source>
					<target>${version.java}</target>
				</configuration>
			</plugin>
		</plugins>
	</build>

</project>